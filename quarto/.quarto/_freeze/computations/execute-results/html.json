{
  "hash": "c139948fc741e802c412bb68b56ee2ad",
  "result": {
    "markdown": "---\ntitle: Quarto Computations\nexecute:\n  code-fold: true\n---\n\n## NumPy\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\na = np.arange(15).reshape(3, 5)\na\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])\n```\n:::\n:::\n\n\n## Matplotlib\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n\nfig = plt.figure()\nx = np.arange(10)\ny = 2.5 * np.sin(x / 20 * np.pi)\nyerr = np.linspace(0.05, 0.2, 10)\n\nplt.errorbar(x, y + 3, yerr=yerr, label='both limits (default)')\nplt.errorbar(x, y + 2, yerr=yerr, uplims=True, label='uplims=True')\nplt.errorbar(x, y + 1, yerr=yerr, uplims=True, lolims=True,\n             label='uplims=True, lolims=True')\n\nupperlimits = [True, False] * 5\nlowerlimits = [False, True] * 5\nplt.errorbar(x, y, yerr=yerr, uplims=upperlimits, lolims=lowerlimits,\n             label='subsets of uplims and lolims')\n\nplt.legend(loc='lower right')\nplt.show(fig)\n```\n\n::: {.cell-output .cell-output-display}\n![](computations_files/figure-html/cell-3-output-1.png){}\n:::\n:::\n\n\n## Plotly\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n\"\"\"\n#| label: fig-gapminder\n#| fig-cap: Life Expectancy and GDP\n#| fig-subcap:\n#|   - \"Gapminder: 1957\"\n#|   - \"Gapminder: 2007\"\n#| layout-ncol: 2\n#| column: page\n\nimport plotly.express as px\nimport plotly.io as pio\ngapminder = px.data.gapminder()\ndef gapminder_plot(year):\n    gapminderYear = gapminder.query(\"year == \" + \n                                    str(year))\n    fig = px.scatter(gapminderYear, \n                     x=\"gdpPercap\", y=\"lifeExp\",\n                     size=\"pop\", size_max=60,\n                     hover_name=\"country\")\n    fig.show()\n    \ngapminder_plot(1957)\ngapminder_plot(2007)\n\"\"\"\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n'\\n#| label: fig-gapminder\\n#| fig-cap: Life Expectancy and GDP\\n#| fig-subcap:\\n#|   - \"Gapminder: 1957\"\\n#|   - \"Gapminder: 2007\"\\n#| layout-ncol: 2\\n#| column: page\\n\\nimport plotly.express as px\\nimport plotly.io as pio\\ngapminder = px.data.gapminder()\\ndef gapminder_plot(year):\\n    gapminderYear = gapminder.query(\"year == \" + \\n                                    str(year))\\n    fig = px.scatter(gapminderYear, \\n                     x=\"gdpPercap\", y=\"lifeExp\",\\n                     size=\"pop\", size_max=60,\\n                     hover_name=\"country\")\\n    fig.show()\\n    \\ngapminder_plot(1957)\\ngapminder_plot(2007)\\n'\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport numpy as np\na = np.arange(15).reshape(3, 5)\na\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\narray([[ 0,  1,  2,  3,  4],\n       [ 5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14]])\n```\n:::\n:::\n\n\n",
    "supporting": [
      "computations_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}