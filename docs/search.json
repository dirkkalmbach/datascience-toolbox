[
  {
    "objectID": "versuch.html",
    "href": "versuch.html",
    "title": "Versuch",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1."
  },
  {
    "objectID": "versuch.html#observable-js",
    "href": "versuch.html#observable-js",
    "title": "Versuch",
    "section": "Observable JS",
    "text": "Observable JS\n\n\nQuarto includes native support for Observable JS, a set of enhancements to vanilla JavaScript created by Mike Bostock (also the author of D3). Observable JS is distinguished by its reactive runtime, which is especially well suited for interactive data exploration and analysis.\nHere’s an example that provides slider inputs to condition the behavior of a visualization:\n\n\n\nCode\nviewof talentWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"talent weight\" })\nviewof looksWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"looks weight\" })\nviewof minimum = Inputs.range([-2, 2], { value: 1, step: 0.01, label: \"minimum fame\" })"
  },
  {
    "objectID": "hello.html",
    "href": "hello.html",
    "title": "Quarto Basics",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\n#theta = 2 * np.pi * r\ntheta = 4 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Dirkiboys quarto website",
    "section": "",
    "text": "hello\n\nversuch"
  },
  {
    "objectID": "versuch.html#some-other-js---loading-csv",
    "href": "versuch.html#some-other-js---loading-csv",
    "title": "Versuch",
    "section": "some other JS -> loading csv",
    "text": "some other JS -> loading csv\n\n\nCode\nathletes = FileAttachment(\"athletes.csv\").csv({typed: true})\n\nPlot.plot({\n  grid: true,\n  facet: {\n    data: athletes,\n    y: \"sex\"\n  },\n  marks: [\n    Plot.rectY(\n      athletes, \n      Plot.binX({y: \"count\"}, {x: \"weight\", fill: \"sex\"})\n    ),\n    Plot.ruleY([0])\n  ]\n})"
  }
]